name: Release PR check

on:
  pull_request:
    branches:
      - release-*
    types: [opened, synchronize, reopened, edited, ready_for_review]

jobs:
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch develop branch
        run: git fetch origin develop

      - name: Check commits
        run: |
          # Get the commit hashes on the PR branch
          PR_COMMITS=$(git log --pretty=format:"%h" HEAD ^origin/develop)

          # Get the commit hashes on the develop branch
          DEVELOP_COMMITS=$(git log --pretty=format:"%h" origin/develop)

          # Check if any of the PR commits are not in the develop branch
          MESSAGE=""
          for COMMIT in $PR_COMMITS; do
            if ! echo "$DEVELOP_COMMITS" | grep -q "$COMMIT"; then
              MESSAGE="$MESSAGE - Commit $COMMIT is not included in the develop branch\n"
            fi
          done

          # Add comment to PR if there are missing commits
          if [ "$MESSAGE" != "" ]; then
            MESSAGE="**Warning:** The following commits are not included in the develop branch:\n$MESSAGE"
            BODY="{\"body\": \"$MESSAGE\"}"
            API_URL=$(jq -r '.pull_request.comments_url' "$GITHUB_EVENT_PATH")
            curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "$BODY" "$API_URL" > /dev/null
          else
            # Remove previous comment if there are no missing commits
            COMMENT_ID=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments" | \
                          jq -r '.[] | select(.body | contains("**Warning:** The following commits are not included in the develop branch:")) | .id')
            if [ "$COMMENT_ID" != "" ]; then
              API_URL="https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID"
              curl -sSL -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$API_URL" > /dev/null
            fi
          fi
